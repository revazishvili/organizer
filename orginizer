from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.button import Button
from kivy.uix.scrollview import ScrollView

class Organizer(App):
    def __init__(self):
        super().__init__()
        self.tasks = {}

    def build(self):
        self.layout = BoxLayout(orientation='vertical')
        self.add_task_layout = BoxLayout(size_hint_y=None, height=50)
        self.task_list = ScrollView()

        self.add_task_input = TextInput(hint_text='დაამატე დავასრულებული დავალება', font_name='NotoSansGeorgian-Regular.ttf', font_size=18, size_hint_x=0.7)
        self.add_due_date_input = TextInput(hint_text='Due date (YYYY-MM-DD)', size_hint_x=0.2)
        self.add_task_button = Button(text='Add Task', size_hint_x=0.1)
        self.add_task_button.bind(on_press=self.add_task)

        self.add_task_layout.add_widget(self.add_task_input)
        self.add_task_layout.add_widget(self.add_due_date_input)
        self.add_task_layout.add_widget(self.add_task_button)

        self.layout.add_widget(self.add_task_layout)
        self.layout.add_widget(self.task_list)

        return self.layout

    def add_task(self, instance):
        task_name = self.add_task_input.text.strip()
        due_date = self.add_due_date_input.text.strip()

        if task_name and due_date:
            self.tasks[task_name] = due_date
            self.update_task_list()
            self.add_task_input.text = ''
            self.add_due_date_input.text = ''

    def remove_task(self, task_name):
        del self.tasks[task_name]
        self.update_task_list()

    def update_task_list(self):
        self.task_list.clear_widgets()

        for task_name, due_date in self.tasks.items():
            task_layout = BoxLayout(size_hint_y=None, height=40)
            task_label = Label(text=f'{task_name} - Due: {due_date}', size_hint_x=0.8, font_name='NotoSansGeorgian-Regular.ttf', font_size=18)
            remove_button = Button(text='Remove', size_hint_x=0.2)
            remove_button.bind(on_press=lambda x, task=task_name: self.remove_task(task))
            task_layout.add_widget(task_label)
            task_layout.add_widget(remove_button)
            self.task_list.add_widget(task_layout)

if __name__ == '__main__':
    Organizer().run()
